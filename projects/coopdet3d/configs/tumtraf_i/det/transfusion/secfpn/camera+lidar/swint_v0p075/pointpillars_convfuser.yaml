# 512x512
voxel_size: [0.25, 0.25, 8]
# 768x768
#voxel_size: [0.1875, 0.1875, 8]
# 1024x1024
#voxel_size: [0.125, 0.125, 8]
point_cloud_range: [-64.0, -64.0, -8.0, 64.0, 64.0, 0.0]

model:
  fuser:
    type: ConvFuser
    in_channels: [80, 64]
    out_channels: 64
  encoders:
    camera:
      vtransform:
        # 512x512
        xbound: [-64.0, 64.0, 0.125]
        ybound: [-64.0, 64.0, 0.125]
        # 768x768
        #xbound: [-64.0, 64.0, 0.08333333]
        #ybound: [-64.0, 64.0, 0.08333333]
    lidar:
      voxelize_reduce: false
      voxelize:
        max_num_points: 20
        point_cloud_range: ${point_cloud_range}
        voxel_size: ${voxel_size}
        max_voxels: [30000, 60000]
      backbone:
        type: PointPillarsEncoder
        pts_voxel_encoder:
          type: PillarFeatureNet
          in_channels: 5
          feat_channels: [64, 64]
          with_distance: false
          point_cloud_range: ${point_cloud_range}
          voxel_size: ${voxel_size}
          norm_cfg:
            type: BN1d
            eps: 1.0e-3
            momentum: 0.01
        pts_middle_encoder:
          type: PointPillarsScatter
          in_channels: 64
          output_shape: [512, 512]
          #output_shape: [768, 768]
          #output_shape: [1024, 1024]
  decoder:
    backbone:
      in_channels: 64
      out_channels: [64, 128, 256]
      layer_nums: [3, 5, 5]
      layer_strides: [2, 2, 2]
    neck:
      in_channels: [64, 128, 256]
      out_channels: [128, 128, 128]
      upsample_strides: [0.5, 1, 2]
  heads:
    object:
      in_channels: 384
      train_cfg:
        grid_size: [512, 512, 1]
        #grid_size: [768, 768, 1]
        #grid_size: [1024, 1024, 1]
        out_size_factor: 4
      test_cfg:
        #grid_size: [512, 512, 1]
        grid_size: [1024, 1024, 1]
        #grid_size: [768, 768, 1]
        #grid_size: [1536, 1536, 1]
        #grid_size: [1024, 1024, 1]
        out_size_factor: 8
      bbox_coder:
        out_size_factor: 4